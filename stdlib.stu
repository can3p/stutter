;;
;; Stdlib functions and definitions.
;;

;; Our nil symbol.
(def nil ())

;; Better function definition syntax.
(def defun (lambda (name args body)
             (def (eval 'name) (eval (list 'lambda args body)))))

;; Boolean negation.
(def not (lambda (a) (if a #f #t)))

;; nil predicate.
(def nil? (lambda (a) (= a nil)))

;; Fold right.
(def foldr (lambda (f end lst)
             (if (nil? lst)
                 end
               (f (car lst) (foldr f (cdr lst) end)))))

;; Fold left.
(def foldl (lambda (f acc lst)
             (if (nil? lst)
                 acc
               (foldl f (f (car lst) acc) (cdr lst)))))

;; Some aliases.
(def fold foldl)
(def reduce foldr)

;; Length of a list.
(def length (lambda (lst)
              (fold (lambda (a b) (+ 1 b)) 0 lst)))

;; Standard map.
(def map (lambda (f lst)
           (if (nil? lst)
               nil
             (cons (f (car lst)) (map f (cdr lst))))))

;; Perl-style grep.
(def grep (lambda (p lst)
            (if (nil? lst)
                nil
              (if (p (car lst))
                  (cons (car lst) (grep p (cdr lst)))
                (grep p (cdr lst))))))

;; Max & min
(def max (lambda (a b) (if (> a b) a b)))
(def min (lambda (a b) (if (< a b) a b)))

;; List max & min.
(def list-max (lambda (lst)
                (fold max 0 lst)))
(def list-min (lambda (lst)
                (fold min (car lst) lst)))
